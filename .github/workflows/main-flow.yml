name: Publish application to the Docker Hub
on: [push, workflow_dispatch]
env:
  #the global environment variable
  MY_GLOBAL_ENV_VAR: 'workflow'
jobs:
  package:
    runs-on: ubuntu-latest
    env:
      #the job scope environment variable.
      MY_GLOBAL_ENV_VAR: 'job'
    outputs:
      artifact-name: ${{ steps.package-name-provider.outputs.artifact-name }}
      error: ${{ steps.software-installation.outputs.error }}
    steps:
      - name: Download code
        uses: actions/checkout@v3
        with:
          #default value. no need to specify
          fetch-depth: '1'

      - name: Set up software and cache dependencies
        id: software-installation
        uses: ./.github/actions/composite-software-setup
        with:
          java-version: 21

      - name: Package artifact
        id: package
        env:
          #defining evn var for the step scope.
          MY_GLOBAL_ENV_VAR: 'step'
        run: mvn clean package

      - name: Upload test report
        if: ${{ failure() && steps.package.outcome == 'failure'}} #by default success() is called
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: target/surefire-reports/TEST-com.demo.project.timeservice.TimeServiceApplicationTests.xml

      - name: Print env var
        #prints job level env var
        run: |
          echo "MY_GLOBAL_ENV_VAR value is:"${{ env.MY_GLOBAL_ENV_VAR }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: | # | is used for multiple values
            target/time-service-0.0.1-SNAPSHOT.jar


  download-package:
    #allows to run jobs sequentially. default behaviour: parallel
    needs:
      - package
    runs-on: ubuntu-22.04
    steps:
      #allows to download artifact
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Ensure that package exists
        run: echo "${{needs.package.outputs.artifact-name}}"

  publish:
    needs: package
    uses: ./.github/workflows/docker-publish.yml
    #you need explicitly pass secrets to reusable workflow
    secrets:
      password: ${{ secrets.DOCKERHUB_TOKEN }}
    with:
      repository: 'waistdeepwooden/timeservice'
      version: 'latest'

  print-error:
    runs-on: ubuntu-22.04
    needs: [publish, package]
    if: ${{needs.publish.outputs.error == 'true' || needs.package.outputs.error == true }}
    steps:
      - name: Print result
        run: echo "Packaging error is:" ${{ needs.package.outputs.error }} "and Publishing error is:"  ${{ needs.publish.outputs.error }}